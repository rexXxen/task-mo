generator client {
  provider = "prisma-client-js"
  previewFeatures = []
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Board {
  id               String @id @default(uuid()) @map("_id")
  orgId            String 
  title            String 
  imageId          String 
  imageThumbUrl    String @db.String
  imageFullUrl     String @db.String
  imageUserName    String @db.String
  imageLinkHTML    String @db.String

  lists            List[]

  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model List {
  id               String @id @default(uuid()) @map("_id")
  title            String
  order            Int

  boardId          String
  board            Board  @relation(fields: [boardId], references: [id], onDelete: Cascade)

  cards            Card[]

  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@index([boardId])
}

model Card {
  id                  String @id @default(uuid()) @map("_id")
  title               String
  description         String? @db.String
  order               Int

  listId              String
  list                List   @relation(fields: [listId], references: [id], onDelete: Cascade)

  labels              Label[]

  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  @@index([listId])
}

model Label {
  id              String @id @default(auto()) @map("_id")  @db.ObjectId
  name            String
  
  color           String
  card            Card @relation(fields: [cardId], references: [id], onDelete: Cascade)
  cardId          String   
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@index([cardId])
}


enum ACTION {
  CREATE
  UPDATE
  DELETE
}

enum ENTITY_TYPE {
  BOARD
  LIST
  CARD
  LABEL
}

model AuditLog {
  id                  String  @id @default(uuid()) @map("_id")
  orgId               String
  action              ACTION
  entityId            String
  entityType          ENTITY_TYPE
  entityTitle         String
  userId              String
  userImage           String @db.String
  userName            String @db.String

  createdAt           DateTime @default(now())
  updatedAt           DateTime  @updatedAt
}
